"""Add banking and business systems models

Revision ID: 920b8e791d92
Revises: 3222e08973f1
Create Date: 2025-08-17 15:45:53.718971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import Text
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects import sqlite

# Enumerated types reused across upgrades to avoid duplicate CREATE TYPE statements.
invoice_type_enum = sa.Enum(
    'standard_invoice',
    'credit_note',
    'debit_note',
    'simplified_invoice',
    'receipt',
    name='invoicetype',
)

validation_status_enum = sa.Enum(
    'pending',
    'valid',
    'invalid',
    'warning',
    name='validationstatus',
)

submission_status_enum = sa.Enum(
    'pending',
    'processing',
    'submitted',
    'accepted',
    'rejected',
    'failed',
    'cancelled',
    name='submissionstatus',
)

auth_method_enum = sa.Enum(
    'oauth2',
    'api_key',
    'username_password',
    'jwt',
    'webhook',
    name='authmethod',
)

business_type_enum = sa.Enum(
    'SOLE_PROPRIETORSHIP',
    'PARTNERSHIP',
    'LIMITED_COMPANY',
    'PUBLIC_COMPANY',
    'NON_PROFIT',
    'COOPERATIVE',
    name='businesstype',
)

organization_status_enum = sa.Enum(
    'ACTIVE',
    'INACTIVE',
    'SUSPENDED',
    'PENDING_VERIFICATION',
    name='organizationstatus',
)

# revision identifiers, used by Alembic.
revision: str = '920b8e791d92'
down_revision: Union[str, Sequence[str], None] = '3222e08973f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analytics_reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('report_name', sa.String(length=255), nullable=False),
    sa.Column('report_type', sa.String(length=100), nullable=False),
    sa.Column('report_period', sa.String(length=50), nullable=True),
    sa.Column('report_data', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('summary_metrics', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('generated_by', sa.UUID(), nullable=True),
    sa.Column('generation_status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('access_roles', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_format', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.Enum('USER_LOGIN', 'DATA_ACCESS', 'SYSTEM_CONFIGURATION', 'INTEGRATION_CHANGE', 'COMPLIANCE_CHECK', 'DATA_EXPORT', name='auditeventtype'), nullable=False),
    sa.Column('event_description', sa.String(length=500), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('source_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('target_type', sa.String(length=100), nullable=True),
    sa.Column('target_id', sa.String(length=255), nullable=True),
    sa.Column('event_data', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('correlation_id', sa.String(length=255), nullable=True),
    sa.Column('compliance_relevant', sa.Boolean(), nullable=True),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banking_connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('si_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.Enum('MONO', 'STITCH', 'UNIFIED_BANKING', name='bankingprovider'), nullable=False),
    sa.Column('provider_connection_id', sa.String(length=255), nullable=False),
    sa.Column('provider_account_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('CONNECTED', 'DISCONNECTED', 'PENDING', 'ERROR', 'REAUTHORIZATION_REQUIRED', name='connectionstatus'), nullable=True),
    sa.Column('bank_name', sa.String(length=255), nullable=True),
    sa.Column('bank_code', sa.String(length=20), nullable=True),
    sa.Column('account_number', sa.String(length=50), nullable=True),
    sa.Column('account_name', sa.String(length=255), nullable=True),
    sa.Column('account_type', sa.Enum('SAVINGS', 'CURRENT', 'DOMICILIARY', 'FIXED_DEPOSIT', name='accounttype'), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('connection_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_frequency_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banking_credentials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('si_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('MONO', 'STITCH', 'UNIFIED_BANKING', name='bankingprovider'), nullable=False),
    sa.Column('environment', sa.String(length=20), nullable=True),
    sa.Column('api_key', sa.Text(), nullable=True),
    sa.Column('client_id', sa.Text(), nullable=True),
    sa.Column('client_secret', sa.Text(), nullable=True),
    sa.Column('webhook_secret', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_validated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('credentials_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('certificate_type', sa.Enum('FIRS_DIGITAL_CERTIFICATE', 'SSL_TLS_CERTIFICATE', 'API_CERTIFICATE', 'SIGNING_CERTIFICATE', name='certificatetype'), nullable=False),
    sa.Column('certificate_name', sa.String(length=255), nullable=False),
    sa.Column('issuer', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('certificate_data', sa.Text(), nullable=True),
    sa.Column('private_key_data', sa.Text(), nullable=True),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'REVOKED', 'PENDING_RENEWAL', 'SUSPENDED', name='certificatestatus'), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('certificate_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compliance_checks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('check_type', sa.String(length=100), nullable=False),
    sa.Column('check_name', sa.String(length=255), nullable=False),
    sa.Column('check_version', sa.String(length=50), nullable=True),
    sa.Column('compliance_status', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('check_results', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('recommendations', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('checked_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('checked_by', sa.UUID(), nullable=True),
    sa.Column('next_check_due', sa.DateTime(timezone=True), nullable=True),
    sa.Column('remediation_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('remediation_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('template_name', sa.String(length=255), nullable=False),
    sa.Column('document_type', sa.Enum('INVOICE', 'CREDIT_NOTE', 'DEBIT_NOTE', 'RECEIPT', 'PROFORMA', 'QUOTE', name='documenttype'), nullable=False),
    sa.Column('template_version', sa.String(length=50), nullable=True),
    sa.Column('template_data', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('style_configuration', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxpayers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('tin', sa.String(length=50), nullable=False),
    sa.Column('business_name', sa.String(length=255), nullable=False),
    sa.Column('registration_number', sa.String(length=100), nullable=True),
    sa.Column('firs_taxpayer_id', sa.String(length=255), nullable=True),
    sa.Column('registration_status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING_REGISTRATION', 'CANCELLED', name='taxpayerstatus'), nullable=True),
    sa.Column('registration_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('business_type', sa.String(length=100), nullable=True),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('business_address', sa.Text(), nullable=True),
    sa.Column('contact_person', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('contact_phone', sa.String(length=50), nullable=True),
    sa.Column('vat_registered', sa.Boolean(), nullable=True),
    sa.Column('vat_number', sa.String(length=50), nullable=True),
    sa.Column('compliance_level', sa.String(length=50), nullable=True),
    sa.Column('taxpayer_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('last_updated_from_firs', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tin')
    )
    op.create_table('webhook_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_system', sa.String(length=100), nullable=False),
    sa.Column('event_type', sa.Enum('FIRS_SUBMISSION_STATUS', 'FIRS_VALIDATION_RESULT', 'BANKING_TRANSACTION', 'ERP_DATA_CHANGE', 'POS_TRANSACTION', name='webhookeventtype'), nullable=False),
    sa.Column('webhook_id', sa.String(length=255), nullable=True),
    sa.Column('event_data', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('raw_payload', sa.Text(), nullable=True),
    sa.Column('headers', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('processing_status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('signature_valid', sa.Boolean(), nullable=True),
    sa.Column('source_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('provider_account_id', sa.String(length=255), nullable=False),
    sa.Column('account_number', sa.String(length=50), nullable=False),
    sa.Column('account_name', sa.String(length=255), nullable=False),
    sa.Column('account_type', sa.Enum('SAVINGS', 'CURRENT', 'DOMICILIARY', 'FIXED_DEPOSIT', name='accounttype'), nullable=False),
    sa.Column('bank_name', sa.String(length=255), nullable=False),
    sa.Column('bank_code', sa.String(length=20), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('available_balance', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('last_balance_update', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['banking_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banking_sync_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_created', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('sync_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['banking_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banking_webhooks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.Enum('MONO', 'STITCH', 'UNIFIED_BANKING', name='bankingprovider'), nullable=False),
    sa.Column('webhook_id', sa.String(length=255), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('webhook_data', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('raw_payload', sa.Text(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('source_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['banking_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_generation_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('document_type', sa.Enum('INVOICE', 'CREDIT_NOTE', 'DEBIT_NOTE', 'RECEIPT', 'PROFORMA', 'QUOTE', name='documenttype'), nullable=False),
    sa.Column('document_reference', sa.String(length=255), nullable=False),
    sa.Column('generation_status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('file_format', sa.String(length=10), nullable=True),
    sa.Column('storage_path', sa.String(length=500), nullable=True),
    sa.Column('generation_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('error_details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['document_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('provider_transaction_id', sa.String(length=255), nullable=False),
    sa.Column('transaction_reference', sa.String(length=255), nullable=True),
    sa.Column('transaction_type', sa.Enum('CREDIT', 'DEBIT', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('narration', sa.Text(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('value_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('balance_after', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('counterparty_name', sa.String(length=255), nullable=True),
    sa.Column('counterparty_account', sa.String(length=50), nullable=True),
    sa.Column('counterparty_bank', sa.String(length=255), nullable=True),
    sa.Column('transaction_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['bank_accounts.id'], ),
    sa.ForeignKeyConstraint(['connection_id'], ['banking_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crm_connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('si_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('SALESFORCE', 'HUBSPOT', 'PIPEDRIVE', 'ZOHO', 'FRESHWORKS', name='crmprovider'), nullable=False),
    sa.Column('system_name', sa.String(length=255), nullable=False),
    sa.Column('instance_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_configuration', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('credentials_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['credentials_id'], ['integration_credentials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('erp_connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('si_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('ODOO', 'SAP', 'ORACLE', 'DYNAMICS', 'NETSUITE', 'QUICKBOOKS', 'SAGE', name='erpprovider'), nullable=False),
    sa.Column('system_name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=100), nullable=True),
    sa.Column('base_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_frequency_hours', sa.Integer(), nullable=True),
    sa.Column('sync_configuration', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('credentials_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['credentials_id'], ['integration_credentials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('irn_generations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('irn_number', sa.String(length=255), nullable=False),
    sa.Column('invoice_reference', sa.String(length=255), nullable=False),
    sa.Column('invoice_hash', sa.String(length=255), nullable=True),
    sa.Column('qr_code_data', sa.Text(), nullable=True),
    sa.Column('qr_code_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('generation_status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_to_firs', sa.Boolean(), nullable=True),
    sa.Column('firs_submission_id', sa.UUID(), nullable=True),
    sa.Column('validation_status', sa.String(length=50), nullable=True),
    sa.Column('validation_details', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['firs_submission_id'], ['firs_submissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('irn_number')
    )
    op.create_table('pos_connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('si_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('TOAST', 'CLOVER', 'SQUARE', 'MONIEPOINT', 'OPAY', 'PALMPAY', name='posprovider'), nullable=False),
    sa.Column('device_name', sa.String(length=255), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_transaction_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_configuration', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('credentials_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['credentials_id'], ['integration_credentials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crm_sync_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=False),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['crm_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('erp_sync_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=False),
    sa.Column('records_fetched', sa.Integer(), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_created', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('sync_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['erp_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pos_transaction_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('pos_transaction_id', sa.String(length=255), nullable=False),
    sa.Column('transaction_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'PARTIAL', 'CANCELLED', name='syncstatus'), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('invoice_generated', sa.Boolean(), nullable=True),
    sa.Column('invoice_reference', sa.String(length=255), nullable=True),
    sa.Column('transaction_metadata', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['pos_connections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('firs_submissions', sa.Column('invoice_number', sa.String(length=100), nullable=False))
    bind = op.get_bind()
    invoice_type_enum.create(bind, checkfirst=True)
    validation_status_enum.create(bind, checkfirst=True)
    auth_method_enum.create(bind, checkfirst=True)

    # Add enriched FIRS submission fields leveraging the new enum types.
    op.add_column('firs_submissions', sa.Column('invoice_type', invoice_type_enum, nullable=False))
    op.add_column('firs_submissions', sa.Column('irn', sa.String(length=255), nullable=True))
    op.add_column('firs_submissions', sa.Column('validation_status', validation_status_enum, nullable=False))
    op.add_column('firs_submissions', sa.Column('invoice_data', sa.JSON(), nullable=False))
    op.add_column('firs_submissions', sa.Column('original_data', sa.JSON(), nullable=True))
    op.add_column('firs_submissions', sa.Column('subtotal', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('firs_submissions', sa.Column('tax_amount', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('firs_submissions', sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=False))
    op.add_column('firs_submissions', sa.Column('currency', sa.String(length=3), nullable=False))
    op.add_column('firs_submissions', sa.Column('customer_name', sa.String(length=255), nullable=True))
    op.add_column('firs_submissions', sa.Column('customer_email', sa.String(length=255), nullable=True))
    op.add_column('firs_submissions', sa.Column('customer_tin', sa.String(length=50), nullable=True))
    op.add_column('firs_submissions', sa.Column('firs_response', sa.JSON(), nullable=True))
    op.add_column('firs_submissions', sa.Column('firs_submission_id', sa.String(length=100), nullable=True))
    op.add_column('firs_submissions', sa.Column('firs_status_code', sa.String(length=20), nullable=True))
    op.add_column('firs_submissions', sa.Column('firs_message', sa.Text(), nullable=True))
    op.add_column('firs_submissions', sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('firs_submissions', sa.Column('rejected_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('firs_submissions', sa.Column('retry_count', sa.Integer(), nullable=False))
    op.add_column('firs_submissions', sa.Column('last_retry_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('firs_submissions', sa.Column('source_integration_id', sa.UUID(), nullable=True))
    op.add_column('firs_submissions', sa.Column('source_system', sa.String(length=50), nullable=True))
    op.add_column('firs_submissions', sa.Column('submitted_by_user_id', sa.UUID(), nullable=True))
    op.alter_column('firs_submissions', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('firs_submissions', 'organization_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    # Ensure the submission status enum includes the expanded set of values.
    op.execute("ALTER TYPE submissionstatus ADD VALUE IF NOT EXISTS 'processing';")
    op.execute("ALTER TYPE submissionstatus ADD VALUE IF NOT EXISTS 'failed';")
    op.alter_column('firs_submissions', 'status',
               existing_type=submission_status_enum,
               type_=submission_status_enum,
               existing_nullable=False)
    op.alter_column(
        'firs_submissions',
        'error_details',
        existing_type=sa.TEXT(),
        type_=sa.JSON(),
        existing_nullable=True,
        postgresql_using="NULLIF(error_details, '')::json"
    )
    op.alter_column('firs_submissions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_firs_submissions_customer_tin'), 'firs_submissions', ['customer_tin'], unique=False)
    op.create_index(op.f('ix_firs_submissions_firs_submission_id'), 'firs_submissions', ['firs_submission_id'], unique=False)
    op.create_index(op.f('ix_firs_submissions_id'), 'firs_submissions', ['id'], unique=False)
    op.create_index(op.f('ix_firs_submissions_invoice_number'), 'firs_submissions', ['invoice_number'], unique=False)
    op.create_index(op.f('ix_firs_submissions_irn'), 'firs_submissions', ['irn'], unique=True)
    op.create_foreign_key(None, 'firs_submissions', 'users', ['submitted_by_user_id'], ['id'])
    op.create_foreign_key(None, 'firs_submissions', 'integrations', ['source_integration_id'], ['id'])
    op.drop_column('firs_submissions', 'response_data')
    op.drop_column('firs_submissions', 'invoice_id')
    op.drop_column('firs_submissions', 'submission_type')
    op.drop_column('firs_submissions', 'processed_at')
    op.drop_column('firs_submissions', 'submission_data')
    op.drop_column('firs_submissions', 'firs_reference')
    op.add_column('integration_credentials', sa.Column('key_name', sa.String(length=100), nullable=False))
    op.add_column('integration_credentials', sa.Column('encrypted_value', sa.Text(), nullable=False))
    op.add_column('integration_credentials', sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('integration_credentials', sa.Column('created_by_user_id', sa.UUID(), nullable=True))
    op.add_column('integration_credentials', sa.Column('rotation_required', sa.Boolean(), nullable=False))
    op.alter_column('integration_credentials', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('integration_credentials', 'integration_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('integration_credentials', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('integration_credentials', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_integration_credentials_id'), 'integration_credentials', ['id'], unique=False)
    op.create_foreign_key(None, 'integration_credentials', 'users', ['created_by_user_id'], ['id'])
    op.drop_column('integration_credentials', 'encrypted_data')
    op.drop_column('integration_credentials', 'credential_type')
    op.add_column('integrations', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('integrations', sa.Column('auth_method', auth_method_enum, nullable=False))
    op.add_column('integrations', sa.Column('endpoint_url', sa.String(length=500), nullable=True))
    op.add_column('integrations', sa.Column('configuration', sa.JSON(), nullable=True))
    op.add_column('integrations', sa.Column('sync_settings', sa.JSON(), nullable=True))
    op.add_column('integrations', sa.Column('field_mappings', sa.JSON(), nullable=True))
    op.add_column('integrations', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('integrations', sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('integrations', sa.Column('last_error', sa.Text(), nullable=True))
    op.add_column('integrations', sa.Column('error_count', sa.Integer(), nullable=False))
    op.add_column('integrations', sa.Column('total_records_synced', sa.Integer(), nullable=False))
    op.add_column('integrations', sa.Column('sync_frequency', sa.String(length=50), nullable=False))
    op.add_column('integrations', sa.Column('created_by_user_id', sa.UUID(), nullable=True))
    op.alter_column('integrations', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('integrations', 'organization_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('integrations', 'integration_type',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('ODOO', 'SAP', 'QUICKBOOKS', 'XERO', 'ORACLE_ERP', 'MICROSOFT_DYNAMICS', 'SALESFORCE', 'HUBSPOT', 'ZOHO_CRM', 'MICROSOFT_CRM', 'SQUARE', 'SHOPIFY', 'CLOVER', 'MONIEPOINT', 'PAYSTACK', 'FLUTTERWAVE', 'INTERSWITCH', 'MONO', 'OKRA', 'PLAID', 'SAGE', 'WAVE', 'FRESHBOOKS', name='integrationtype'),
               existing_nullable=False)
    op.alter_column('integrations', 'status',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.Enum('ACTIVE', 'INACTIVE', 'CONNECTING', 'FAILED', 'SUSPENDED', 'EXPIRED', name='integrationstatus'),
               existing_nullable=False)
    op.alter_column('integrations', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_integrations_id'), 'integrations', ['id'], unique=False)
    op.create_foreign_key(None, 'integrations', 'users', ['created_by_user_id'], ['id'])
    op.drop_column('integrations', 'config_data')
    op.drop_column('integrations', 'last_sync')
    op.drop_column('integrations', 'provider')
    op.add_column('organization_users', sa.Column('is_primary_contact', sa.Boolean(), nullable=False))
    op.add_column('organization_users', sa.Column('permissions', sa.JSON(), nullable=True))
    op.add_column('organization_users', sa.Column('invited_by_user_id', sa.UUID(), nullable=True))
    op.add_column('organization_users', sa.Column('invitation_accepted_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('organization_users', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('organization_users', 'user_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('organization_users', 'organization_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('organization_users', 'role',
               existing_type=sa.VARCHAR(length=6),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('organization_users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('organization_users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_organization_users_id'), 'organization_users', ['id'], unique=False)
    op.create_foreign_key(None, 'organization_users', 'users', ['invited_by_user_id'], ['id'])
    op.drop_column('organization_users', 'joined_at')
    op.add_column('organizations', sa.Column('business_name', sa.String(length=255), nullable=True))
    bind = op.get_bind()
    business_type_enum.create(bind, checkfirst=True)
    organization_status_enum.create(bind, checkfirst=True)
    op.add_column('organizations', sa.Column('business_type', business_type_enum, nullable=True))
    op.add_column('organizations', sa.Column('tin', sa.String(length=50), nullable=True))
    op.add_column('organizations', sa.Column('rc_number', sa.String(length=50), nullable=True))
    op.add_column('organizations', sa.Column('vat_number', sa.String(length=50), nullable=True))
    op.add_column('organizations', sa.Column('email', sa.String(length=255), nullable=True))
    op.add_column('organizations', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('organizations', sa.Column('website', sa.String(length=255), nullable=True))
    op.add_column('organizations', sa.Column('city', sa.String(length=100), nullable=True))
    op.add_column('organizations', sa.Column('state', sa.String(length=100), nullable=True))
    op.add_column('organizations', sa.Column('lga', sa.String(length=100), nullable=True))
    op.add_column('organizations', sa.Column('postal_code', sa.String(length=20), nullable=True))
    op.add_column('organizations', sa.Column('country', sa.String(length=50), nullable=False))
    op.add_column('organizations', sa.Column('status', organization_status_enum, nullable=False))
    op.add_column('organizations', sa.Column('is_verified', sa.Boolean(), nullable=False))
    op.add_column('organizations', sa.Column('verification_documents', sa.JSON(), nullable=True))
    op.add_column('organizations', sa.Column('firs_service_id', sa.String(length=50), nullable=True))
    op.add_column('organizations', sa.Column('firs_app_status', sa.String(length=50), nullable=False))
    op.add_column('organizations', sa.Column('logo_url', sa.String(length=500), nullable=True))
    op.add_column('organizations', sa.Column('branding_settings', sa.JSON(), nullable=True))
    op.add_column('organizations', sa.Column('cac_registration_date', sa.String(length=50), nullable=True))
    op.add_column('organizations', sa.Column('business_commencement_date', sa.String(length=50), nullable=True))
    op.add_column('organizations', sa.Column('authorized_share_capital', sa.String(length=100), nullable=True))
    op.add_column('organizations', sa.Column('paid_up_capital', sa.String(length=100), nullable=True))
    op.add_column('organizations', sa.Column('service_packages', sa.JSON(), nullable=True))
    op.add_column('organizations', sa.Column('integration_preferences', sa.JSON(), nullable=True))
    op.alter_column('organizations', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('organizations', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_organizations_firs_service_id'), 'organizations', ['firs_service_id'], unique=True)
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=False)
    op.create_index(op.f('ix_organizations_rc_number'), 'organizations', ['rc_number'], unique=False)
    op.create_index(op.f('ix_organizations_tin'), 'organizations', ['tin'], unique=False)
    op.drop_column('organizations', 'contact_phone')
    op.drop_column('organizations', 'tax_id')
    op.drop_column('organizations', 'is_active')
    op.drop_column('organizations', 'registration_number')
    op.drop_column('organizations', 'contact_email')
    op.add_column('user_service_access', sa.Column('subscription_status', sa.String(length=50), nullable=False))
    op.add_column('user_service_access', sa.Column('subscription_tier', sa.String(length=50), nullable=True))
    op.add_column('user_service_access', sa.Column('granted_by_user_id', sa.UUID(), nullable=True))
    op.add_column('user_service_access', sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('user_service_access', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('user_service_access', 'user_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('user_service_access', 'service_type',
               existing_type=sa.VARCHAR(length=21),
               type_=sa.Enum('SI_SERVICE', 'APP_SERVICE', 'HYBRID_SERVICE', 'PLATFORM_ADMIN', name='servicetype'),
               existing_nullable=False)
    op.alter_column('user_service_access', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user_service_access', 'granted_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('user_service_access', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_user_service_access_id'), 'user_service_access', ['id'], unique=False)
    op.create_foreign_key(None, 'user_service_access', 'users', ['granted_by_user_id'], ['id'])
    op.add_column('users', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('is_email_verified', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('service_package', sa.String(length=20), nullable=False))
    op.add_column('users', sa.Column('email_verification_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('email_verification_sent_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('password_reset_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('password_reset_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('password_reset_expires_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('login_count', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('terms_accepted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('privacy_accepted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('data_usage_consents', sa.String(), nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=21),
               type_=sa.Enum('SI_USER', 'APP_USER', 'HYBRID_USER', 'BUSINESS_OWNER', 'BUSINESS_ADMIN', 'BUSINESS_USER', 'PLATFORM_ADMIN', 'SUPPORT_USER', name='userrole'),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'phone_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True))
    op.add_column('users', sa.Column('is_verified', sa.BOOLEAN(), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.BOOLEAN(), nullable=True))
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.alter_column('users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.Enum('SI_USER', 'APP_USER', 'HYBRID_USER', 'BUSINESS_OWNER', 'BUSINESS_ADMIN', 'BUSINESS_USER', 'PLATFORM_ADMIN', 'SUPPORT_USER', name='userrole'),
               type_=sa.VARCHAR(length=21),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('users', 'data_usage_consents')
    op.drop_column('users', 'privacy_accepted_at')
    op.drop_column('users', 'terms_accepted_at')
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'password_reset_expires_at')
    op.drop_column('users', 'password_reset_at')
    op.drop_column('users', 'password_reset_token')
    op.drop_column('users', 'email_verification_sent_at')
    op.drop_column('users', 'email_verification_token')
    op.drop_column('users', 'service_package')
    op.drop_column('users', 'is_email_verified')
    op.drop_column('users', 'phone')
    op.drop_constraint(None, 'user_service_access', type_='foreignkey')
    op.drop_index(op.f('ix_user_service_access_id'), table_name='user_service_access')
    op.alter_column('user_service_access', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('user_service_access', 'granted_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('user_service_access', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user_service_access', 'service_type',
               existing_type=sa.Enum('SI_SERVICE', 'APP_SERVICE', 'HYBRID_SERVICE', 'PLATFORM_ADMIN', name='servicetype'),
               type_=sa.VARCHAR(length=21),
               existing_nullable=False)
    op.alter_column('user_service_access', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('user_service_access', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('user_service_access', 'last_accessed')
    op.drop_column('user_service_access', 'granted_by_user_id')
    op.drop_column('user_service_access', 'subscription_tier')
    op.drop_column('user_service_access', 'subscription_status')
    op.add_column('organizations', sa.Column('contact_email', sa.VARCHAR(length=255), nullable=True))
    op.add_column('organizations', sa.Column('registration_number', sa.VARCHAR(length=100), nullable=True))
    op.add_column('organizations', sa.Column('is_active', sa.BOOLEAN(), nullable=True))
    op.add_column('organizations', sa.Column('tax_id', sa.VARCHAR(length=50), nullable=True))
    op.add_column('organizations', sa.Column('contact_phone', sa.VARCHAR(length=20), nullable=True))
    op.drop_index(op.f('ix_organizations_tin'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_rc_number'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_firs_service_id'), table_name='organizations')
    op.alter_column('organizations', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('organizations', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('organizations', 'integration_preferences')
    op.drop_column('organizations', 'service_packages')
    op.drop_column('organizations', 'paid_up_capital')
    op.drop_column('organizations', 'authorized_share_capital')
    op.drop_column('organizations', 'business_commencement_date')
    op.drop_column('organizations', 'cac_registration_date')
    op.drop_column('organizations', 'branding_settings')
    op.drop_column('organizations', 'logo_url')
    op.drop_column('organizations', 'firs_app_status')
    op.drop_column('organizations', 'firs_service_id')
    op.drop_column('organizations', 'verification_documents')
    op.drop_column('organizations', 'is_verified')
    op.drop_column('organizations', 'status')
    op.drop_column('organizations', 'country')
    op.drop_column('organizations', 'postal_code')
    op.drop_column('organizations', 'lga')
    op.drop_column('organizations', 'state')
    op.drop_column('organizations', 'city')
    op.drop_column('organizations', 'website')
    op.drop_column('organizations', 'phone')
    op.drop_column('organizations', 'email')
    op.drop_column('organizations', 'vat_number')
    op.drop_column('organizations', 'rc_number')
    op.drop_column('organizations', 'tin')
    op.drop_column('organizations', 'business_type')
    op.drop_column('organizations', 'business_name')
    organization_status_enum.drop(op.get_bind(), checkfirst=True)
    business_type_enum.drop(op.get_bind(), checkfirst=True)
    op.add_column('organization_users', sa.Column('joined_at', sa.DATETIME(), nullable=True))
    op.drop_constraint(None, 'organization_users', type_='foreignkey')
    op.drop_index(op.f('ix_organization_users_id'), table_name='organization_users')
    op.alter_column('organization_users', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('organization_users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('organization_users', 'role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=6),
               existing_nullable=False)
    op.alter_column('organization_users', 'organization_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('organization_users', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('organization_users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('organization_users', 'invitation_accepted_at')
    op.drop_column('organization_users', 'invited_by_user_id')
    op.drop_column('organization_users', 'permissions')
    op.drop_column('organization_users', 'is_primary_contact')
    op.add_column('integrations', sa.Column('provider', sa.VARCHAR(length=100), nullable=False))
    op.add_column('integrations', sa.Column('last_sync', sa.DATETIME(), nullable=True))
    op.add_column('integrations', sa.Column('config_data', sqlite.JSON(), nullable=True))
    op.drop_constraint(None, 'integrations', type_='foreignkey')
    op.drop_index(op.f('ix_integrations_id'), table_name='integrations')
    op.alter_column('integrations', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('integrations', 'status',
               existing_type=sa.Enum('ACTIVE', 'INACTIVE', 'CONNECTING', 'FAILED', 'SUSPENDED', 'EXPIRED', name='integrationstatus'),
               type_=sa.VARCHAR(length=8),
               existing_nullable=False)
    op.alter_column('integrations', 'integration_type',
               existing_type=sa.Enum('ODOO', 'SAP', 'QUICKBOOKS', 'XERO', 'ORACLE_ERP', 'MICROSOFT_DYNAMICS', 'SALESFORCE', 'HUBSPOT', 'ZOHO_CRM', 'MICROSOFT_CRM', 'SQUARE', 'SHOPIFY', 'CLOVER', 'MONIEPOINT', 'PAYSTACK', 'FLUTTERWAVE', 'INTERSWITCH', 'MONO', 'OKRA', 'PLAID', 'SAGE', 'WAVE', 'FRESHBOOKS', name='integrationtype'),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.alter_column('integrations', 'organization_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('integrations', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    auth_method_enum.drop(op.get_bind(), checkfirst=True)
    op.drop_column('integrations', 'created_by_user_id')
    op.drop_column('integrations', 'sync_frequency')
    op.drop_column('integrations', 'total_records_synced')
    op.drop_column('integrations', 'error_count')
    op.drop_column('integrations', 'last_error')
    op.drop_column('integrations', 'last_sync_at')
    op.drop_column('integrations', 'is_active')
    op.drop_column('integrations', 'field_mappings')
    op.drop_column('integrations', 'sync_settings')
    op.drop_column('integrations', 'configuration')
    op.drop_column('integrations', 'endpoint_url')
    op.drop_column('integrations', 'auth_method')
    op.drop_column('integrations', 'description')
    op.add_column('integration_credentials', sa.Column('credential_type', sa.VARCHAR(length=17), nullable=False))
    op.add_column('integration_credentials', sa.Column('encrypted_data', sa.TEXT(), nullable=False))
    op.drop_constraint(None, 'integration_credentials', type_='foreignkey')
    op.drop_index(op.f('ix_integration_credentials_id'), table_name='integration_credentials')
    op.alter_column('integration_credentials', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('integration_credentials', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('integration_credentials', 'integration_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('integration_credentials', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('integration_credentials', 'rotation_required')
    op.drop_column('integration_credentials', 'created_by_user_id')
    op.drop_column('integration_credentials', 'last_used_at')
    op.drop_column('integration_credentials', 'encrypted_value')
    op.drop_column('integration_credentials', 'key_name')
    op.add_column('firs_submissions', sa.Column('firs_reference', sa.VARCHAR(length=100), nullable=True))
    op.add_column('firs_submissions', sa.Column('submission_data', sqlite.JSON(), nullable=True))
    op.add_column('firs_submissions', sa.Column('processed_at', sa.DATETIME(), nullable=True))
    op.add_column('firs_submissions', sa.Column('submission_type', sa.VARCHAR(length=11), nullable=False))
    op.add_column('firs_submissions', sa.Column('invoice_id', sa.VARCHAR(length=100), nullable=False))
    op.add_column('firs_submissions', sa.Column('response_data', sqlite.JSON(), nullable=True))
    op.drop_constraint(None, 'firs_submissions', type_='foreignkey')
    op.drop_constraint(None, 'firs_submissions', type_='foreignkey')
    op.drop_index(op.f('ix_firs_submissions_irn'), table_name='firs_submissions')
    op.drop_index(op.f('ix_firs_submissions_invoice_number'), table_name='firs_submissions')
    op.drop_index(op.f('ix_firs_submissions_id'), table_name='firs_submissions')
    op.drop_index(op.f('ix_firs_submissions_firs_submission_id'), table_name='firs_submissions')
    op.drop_index(op.f('ix_firs_submissions_customer_tin'), table_name='firs_submissions')
    op.alter_column('firs_submissions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('firs_submissions', 'error_details',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('firs_submissions', 'status',
               existing_type=sa.Enum('PENDING', 'PROCESSING', 'SUBMITTED', 'ACCEPTED', 'REJECTED', 'FAILED', 'CANCELLED', name='submissionstatus'),
               type_=sa.VARCHAR(length=9),
               existing_nullable=False)
    op.alter_column('firs_submissions', 'organization_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('firs_submissions', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('firs_submissions', 'submitted_by_user_id')
    op.drop_column('firs_submissions', 'source_system')
    op.drop_column('firs_submissions', 'source_integration_id')
    op.drop_column('firs_submissions', 'last_retry_at')
    op.drop_column('firs_submissions', 'retry_count')
    op.drop_column('firs_submissions', 'rejected_at')
    op.drop_column('firs_submissions', 'accepted_at')
    op.drop_column('firs_submissions', 'firs_message')
    op.drop_column('firs_submissions', 'firs_status_code')
    op.drop_column('firs_submissions', 'firs_submission_id')
    op.drop_column('firs_submissions', 'firs_response')
    op.drop_column('firs_submissions', 'customer_tin')
    op.drop_column('firs_submissions', 'customer_email')
    op.drop_column('firs_submissions', 'customer_name')
    op.drop_column('firs_submissions', 'currency')
    op.drop_column('firs_submissions', 'total_amount')
    op.drop_column('firs_submissions', 'tax_amount')
    op.drop_column('firs_submissions', 'subtotal')
    op.drop_column('firs_submissions', 'original_data')
    op.drop_column('firs_submissions', 'invoice_data')
    op.drop_column('firs_submissions', 'validation_status')
    op.drop_column('firs_submissions', 'irn')
    op.drop_column('firs_submissions', 'invoice_type')
    op.drop_column('firs_submissions', 'invoice_number')
    validation_status_enum.drop(op.get_bind(), checkfirst=True)
    invoice_type_enum.drop(op.get_bind(), checkfirst=True)
    op.drop_table('pos_transaction_logs')
    op.drop_table('erp_sync_logs')
    op.drop_table('crm_sync_logs')
    op.drop_table('pos_connections')
    op.drop_table('irn_generations')
    op.drop_table('erp_connections')
    op.drop_table('crm_connections')
    op.drop_table('bank_transactions')
    op.drop_table('document_generation_logs')
    op.drop_table('banking_webhooks')
    op.drop_table('banking_sync_logs')
    op.drop_table('bank_accounts')
    op.drop_table('webhook_events')
    op.drop_table('taxpayers')
    op.drop_table('document_templates')
    op.drop_table('compliance_checks')
    op.drop_table('certificates')
    op.drop_table('banking_credentials')
    op.drop_table('banking_connections')
    op.drop_table('audit_logs')
    op.drop_table('analytics_reports')
    # ### end Alembic commands ###
